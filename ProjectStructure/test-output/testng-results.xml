<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="9" passed="4" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-03-16T11:08:21 SGT" name="Suite" finished-at="2024-03-16T11:08:21 SGT" duration-ms="0">
    <groups>
    </groups>
  </suite> <!-- Suite -->
  <suite started-at="2024-03-16T11:08:17 SGT" name="Suite B" finished-at="2024-03-16T11:08:17 SGT" duration-ms="11">
    <groups>
    </groups>
    <test started-at="2024-03-16T11:08:17 SGT" name="TestB" finished-at="2024-03-16T11:08:17 SGT" duration-ms="1">
    </test> <!-- TestB -->
    <test started-at="2024-03-16T11:08:17 SGT" name="TestBB" finished-at="2024-03-16T11:08:17 SGT" duration-ms="1">
    </test> <!-- TestBB -->
  </suite> <!-- Suite B -->
  <suite started-at="2024-03-16T11:08:17 SGT" name="Suite C" finished-at="2024-03-16T11:08:21 SGT" duration-ms="4077">
    <groups>
      <group name="smoke">
        <method signature="TestCC.testCC(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SuiteC.TestCC@659499f1]" name="testCC" class="SuiteC.TestCC"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2024-03-16T11:08:17 SGT" name="TestC" finished-at="2024-03-16T11:08:17 SGT" duration-ms="2">
    </test> <!-- TestC -->
    <test started-at="2024-03-16T11:08:17 SGT" name="TestCC" finished-at="2024-03-16T11:08:21 SGT" duration-ms="4067">
      <class name="SuiteC.TestCC">
        <test-method signature="testCC(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SuiteC.TestCC@659499f1]" started-at="2024-03-16T11:08:17 SGT" name="testCC" data-provider="dataSuiteC" finished-at="2024-03-16T11:08:19 SGT" duration-ms="2007" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[U1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[P1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCC -->
        <test-method is-config="true" signature="init(org.testng.ITestResult,org.testng.ITestContext)[pri:0, instance:SuiteC.TestCC@659499f1]" started-at="2024-03-16T11:08:17 SGT" name="init" finished-at="2024-03-16T11:08:17 SGT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestCC.testCC(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SuiteC.TestCC@659499f1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@74d7184a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="quit()[pri:0, instance:SuiteC.TestCC@659499f1]" started-at="2024-03-16T11:08:19 SGT" name="quit" finished-at="2024-03-16T11:08:19 SGT" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="init(org.testng.ITestResult,org.testng.ITestContext)[pri:0, instance:SuiteC.TestCC@659499f1]" started-at="2024-03-16T11:08:19 SGT" name="init" finished-at="2024-03-16T11:08:19 SGT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestCC.testCC(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SuiteC.TestCC@659499f1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@74d7184a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testCC(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SuiteC.TestCC@659499f1]" started-at="2024-03-16T11:08:19 SGT" name="testCC" data-provider="dataSuiteC" finished-at="2024-03-16T11:08:21 SGT" duration-ms="2005" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mozilla]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[U2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[P2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCC -->
        <test-method is-config="true" signature="quit()[pri:0, instance:SuiteC.TestCC@659499f1]" started-at="2024-03-16T11:08:21 SGT" name="quit" finished-at="2024-03-16T11:08:21 SGT" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- SuiteC.TestCC -->
    </test> <!-- TestCC -->
  </suite> <!-- Suite C -->
  <suite started-at="2024-03-16T11:08:12 SGT" name="Suite A" finished-at="2024-03-16T11:08:17 SGT" duration-ms="4776">
    <groups>
      <group name="smoke">
        <method signature="TestA.testA(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SuiteA.TestA@15aab8c6]" name="testA" class="SuiteA.TestA"/>
        <method signature="TestAA.testAA(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SuiteA.TestAA@53ce1329]" name="testAA" class="SuiteA.TestAA"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2024-03-16T11:08:12 SGT" name="TestA" finished-at="2024-03-16T11:08:13 SGT" duration-ms="687">
      <class name="SuiteA.TestA">
        <test-method is-config="true" signature="init(org.testng.ITestResult,org.testng.ITestContext)[pri:0, instance:SuiteA.TestA@15aab8c6]" started-at="2024-03-16T11:08:12 SGT" name="init" finished-at="2024-03-16T11:08:13 SGT" duration-ms="291" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestA.testA(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SuiteA.TestA@15aab8c6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@27dc79f7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testA(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SuiteA.TestA@15aab8c6]" started-at="2024-03-16T11:08:13 SGT" name="testA" data-provider="dataSuiteA" finished-at="2024-03-16T11:08:13 SGT" duration-ms="16" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[U1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[P1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
titles do not match,
text do not match,
expected [title1] but found [title],
A Doesnt match B]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
titles do not match,
text do not match,
expected [title1] but found [title],
A Doesnt match B
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at testbase.testBase.FailAndStopTest(testBase.java:57)
at SuiteA.TestA.testA(TestA.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method is-config="true" signature="quit()[pri:0, instance:SuiteA.TestA@15aab8c6]" started-at="2024-03-16T11:08:13 SGT" name="quit" finished-at="2024-03-16T11:08:13 SGT" duration-ms="302" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="init(org.testng.ITestResult,org.testng.ITestContext)[pri:0, instance:SuiteA.TestA@15aab8c6]" started-at="2024-03-16T11:08:13 SGT" name="init" finished-at="2024-03-16T11:08:13 SGT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestA.testA(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SuiteA.TestA@15aab8c6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@27dc79f7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testA(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SuiteA.TestA@15aab8c6]" started-at="2024-03-16T11:08:13 SGT" name="testA" data-provider="dataSuiteA" finished-at="2024-03-16T11:08:13 SGT" duration-ms="3" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mozilla]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[U2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[P2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
titles do not match,
text do not match,
expected [title1] but found [title],
A Doesnt match B]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
titles do not match,
text do not match,
expected [title1] but found [title],
A Doesnt match B
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at testbase.testBase.FailAndStopTest(testBase.java:57)
at SuiteA.TestA.testA(TestA.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method is-config="true" signature="quit()[pri:0, instance:SuiteA.TestA@15aab8c6]" started-at="2024-03-16T11:08:13 SGT" name="quit" finished-at="2024-03-16T11:08:13 SGT" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- SuiteA.TestA -->
    </test> <!-- TestA -->
    <test started-at="2024-03-16T11:08:13 SGT" name="TestAA" finished-at="2024-03-16T11:08:17 SGT" duration-ms="4063">
      <class name="SuiteA.TestAA">
        <test-method is-config="true" signature="init(org.testng.ITestResult,org.testng.ITestContext)[pri:0, instance:SuiteA.TestAA@53ce1329]" started-at="2024-03-16T11:08:13 SGT" name="init" finished-at="2024-03-16T11:08:13 SGT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestAA.testAA(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SuiteA.TestAA@53ce1329] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@5cbf9e9f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testAA(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SuiteA.TestAA@53ce1329]" started-at="2024-03-16T11:08:13 SGT" name="testAA" data-provider="dataSuiteA" finished-at="2024-03-16T11:08:15 SGT" duration-ms="2007" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[U1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[P1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAA -->
        <test-method is-config="true" signature="quit()[pri:0, instance:SuiteA.TestAA@53ce1329]" started-at="2024-03-16T11:08:15 SGT" name="quit" finished-at="2024-03-16T11:08:15 SGT" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="init(org.testng.ITestResult,org.testng.ITestContext)[pri:0, instance:SuiteA.TestAA@53ce1329]" started-at="2024-03-16T11:08:15 SGT" name="init" finished-at="2024-03-16T11:08:15 SGT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestAA.testAA(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SuiteA.TestAA@53ce1329] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@5cbf9e9f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testAA(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SuiteA.TestAA@53ce1329]" started-at="2024-03-16T11:08:15 SGT" name="testAA" data-provider="dataSuiteA" finished-at="2024-03-16T11:08:17 SGT" duration-ms="2017" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mozilla]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[U2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[P2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAA -->
        <test-method is-config="true" signature="quit()[pri:0, instance:SuiteA.TestAA@53ce1329]" started-at="2024-03-16T11:08:17 SGT" name="quit" finished-at="2024-03-16T11:08:17 SGT" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- SuiteA.TestAA -->
    </test> <!-- TestAA -->
  </suite> <!-- Suite A -->
</testng-results>
